
load "../src/cml.maude" .

mod SCENARIO is
  pr CML .

  op Book : -> ReferentialType .
  op book : -> Expression .
  eq type(book) = Book .

  op Product : -> ReferentialType .
  ops product products : -> Expression .
  eq type(product) = Product .
  eq type(products) = Product * .

  op Order : -> ReferentialType .
  ops order orders : -> Expression .
  eq type(order) = Order .
  eq type(orders) = Order * .

  eq Book <: Product = true .

  var T : Type .
  ceq Order <: T = false if T =/= Order .
  ceq T <: Order = false if T =/= Order .

  op flag : -> Expression .
  eq type(flag) = Boolean .
endm

set show stats off .
--- set trace on .
--- show components SCENARIO .
--- show sorts SCENARIO .

red in SCENARIO : type(book === product) == Boolean .
red in SCENARIO : type(book !== product) == Boolean .

red in SCENARIO : type(product === book) == Boolean .
red in SCENARIO : type(product !== book) == Boolean .

red in SCENARIO : type(book === order) == Undefined(UnrelatedTypeComparison) .
red in SCENARIO : type(book !== order) == Undefined(UnrelatedTypeComparison) .

red in SCENARIO : type(order === book) == Undefined(UnrelatedTypeComparison) .
red in SCENARIO : type(order !== book) == Undefined(UnrelatedTypeComparison) .

red in SCENARIO : type(book is Product) == Boolean .
red in SCENARIO : type(book isnt Product) == Boolean .

red in SCENARIO : type(product is Book) == Boolean .
red in SCENARIO : type(product isnt Book) == Boolean .

red in SCENARIO : type(book is Order) == Undefined(UnrelatedTypeCheck) .
red in SCENARIO : type(book isnt Order) == Undefined(UnrelatedTypeCheck) .

red in SCENARIO : type(book as Product) == Product .
red in SCENARIO : type(book as! Product) == Undefined(UnnecessarilyForcedTypeCast) .
red in SCENARIO : type(book as? Product) == Undefined(UnnecessarilyConditionalTypeCast) .

red in SCENARIO : type(product as Book) == Undefined(InvalidSubTypeCast) .
red in SCENARIO : type(product as! Book) == Book .
red in SCENARIO : type(product as? Book) == Undefined(InvalidReferentialTypeCast) .

red in SCENARIO : type(book === flag) == Undefined(InvalidReferentialExpression) .
red in SCENARIO : type(book !== flag) == Undefined(InvalidReferentialExpression) .

red in SCENARIO : type(flag is Product) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(flag isnt Product) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(book is flag) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(book isnt flag) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(flag as Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(flag as! Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(flag as? Product) == Undefined(InvalidTypeCast) .

red in SCENARIO : type(book as flag) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as! flag) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as? flag) == Undefined(InvalidTypeCast) .

red in SCENARIO : type(book === products) == Undefined(InvalidReferentialExpression) .
red in SCENARIO : type(book !== products) == Undefined(InvalidReferentialExpression) .

red in SCENARIO : type(products is Product) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(products isnt Product) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(book is products) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(book isnt products) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(products as Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(products as! Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(products as? Product) == Undefined(InvalidTypeCast) .

red in SCENARIO : type(book as products) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as! products) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as? products) == Undefined(InvalidTypeCast) .

red in SCENARIO : type(book === orders) == Undefined(InvalidReferentialExpression) .
red in SCENARIO : type(book !== orders) == Undefined(InvalidReferentialExpression) .

red in SCENARIO : type(orders is Product) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(orders isnt Product) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(book is orders) == Undefined(InvalidTypeCheck) .
red in SCENARIO : type(book isnt orders) == Undefined(InvalidTypeCheck) .

red in SCENARIO : type(orders as Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(orders as! Product) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(orders as? Product) == Undefined(InvalidTypeCast) .

red in SCENARIO : type(book as orders) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as! orders) == Undefined(InvalidTypeCast) .
red in SCENARIO : type(book as? orders) == Undefined(InvalidTypeCast) .
