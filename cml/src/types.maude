
mod TYPE is
  sorts Type TypeError .
  op _<=_ : Type Type -> Bool .
  op Undefined : TypeError -> Type .
endm

mod BOOLEAN-TYPE is
  pr TYPE .

  sort BooleanType .
  subsort BooleanType < Type .

  op Boolean : -> BooleanType .
endm

mod NUMERIC-TYPES is
  pr TYPE .

  sort NumericType .
  subsort NumericType < Type .

  op Byte : -> NumericType .
  op Short : -> NumericType .
  op Integer : -> NumericType .
  op Long : -> NumericType .
  op Decimal : -> NumericType .

  op numeric : Type -> Bool .

  var T1 : NumericType .
  eq numeric(T1) = true .

  var T2 : Type .
  eq numeric(T2) = false .

  op _<=_ : NumericType NumericType -> Bool .
  eq Byte <= Byte = true .
  eq Byte <= Short = true .
  eq Short <= Short = true .
  eq Short <= Integer = true .
  eq Integer <= Integer = true .
  eq Integer <= Long = true .
  eq Long <= Long = true .
  eq Long <= Decimal = true .
  eq Decimal <= Decimal = true .
endm

mod FLOATING-POINT-TYPES is
  pr TYPE .

  sort FloatingPointType .
  subsort FloatingPointType < Type .

  op Float : -> FloatingPointType .
  op Double : -> FloatingPointType .

  op floating_point : Type -> Bool .

  var T1 : FloatingPointType .
  eq floating_point(T1) = true .

  var T2 : Type .
  eq floating_point(T2) = false .

  op _<=_ : FloatingPointType FloatingPointType -> Bool .
  eq Float <= Float = true .
  eq Float <= Double = true .
  eq Double <= Double = true .
endm

mod STRING-TYPE is
  pr TYPE .
  op String : -> Type .
endm

mod PRIMITIVE-TYPES is
  pr BOOLEAN-TYPE .
  pr NUMERIC-TYPES .
  pr FLOATING-POINT-TYPES .
  pr STRING-TYPE .
endm

mod REFERENTIAL-TYPES is
  pr TYPE .

  sorts ReferentialType SequentialType OptionalType RequiredType .
  subsorts RequiredType < OptionalType < SequentialType < ReferentialType < Type .

  op _? : RequiredType -> OptionalType .
  op InvalidTypeDeclaration : -> TypeError .
  var T : Type .
  ceq T ? = Undefined(InvalidTypeDeclaration)
    if not (T :: RequiredType) .
endm

mod TYPES is
  pr PRIMITIVE-TYPES .
  pr REFERENTIAL-TYPES .
endm
